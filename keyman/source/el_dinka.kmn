c -------------------------------------------------------------
c el_dinka.kmn
c (Version 3.1)
c
c Keyboard layout for Dinka (Thuɔŋjäŋ), a language of South Sudan
c
c Original Windows version developed and released under MIT license by
c State Library Victoria.
c
c Updated, refactored and cross-platform support added by Enabling Languages.
c
c 12 Jan 2021
c
c -------------------------------------------------------------

store(&version) "10.0"
store(&NAME) 'Thuɔŋjäŋ'
store(&KEYBOARDVERSION) '3.1'
store(&COPYRIGHT) '© 2015-2021 Enabling Languages'
store(&mnemoniclayout) "0"
store(&MESSAGE) 'Keyboard layout for Dinka (Thuɔŋjäŋ)'
store(&TARGETS) 'any'
store(&BITMAP) 'el_dinka.ico'
store(&VISUALKEYBOARD) 'el_dinka.kvks'
store(&LAYOUTFILE) 'el_dinka.keyman-touch-layout'

begin Unicode > use(constraints)

c ------------------------------------------------
c Options
c ------------------------------------------------
c store(nfc) '1'    c 1 (default) = Normalisation Form C, 0 = Normalisation Form D
c store(tones) '0'    c 1 = Use tones, 0 (default) = Do not use tones

store(nfc) 'yes'    c yes (default) = Normalisation Form C, no = Normalisation Form D
store(tones) 'no'    c yes = Use tones, no (default) = Do not use tones

c ------------------------------------------------
c Alphabetic characters
c ------------------------------------------------

c Lowercase consonants
store(consonantLowerChars) U+014B U+0077 U+0072 U+0074 U+0079 U+0070   \
                     U+0064 U+0263 U+0067 U+0068 U+006A U+006B U+006C \
                     U+0063 U+0076 U+0062 U+006E U+006D
store(consonantLowerKeys) [K_Q] [K_W] [K_R] [K_T] [K_Y] [K_P] \
                    [K_D] [K_F] [K_G] [K_H] [K_J] [K_K] [K_L] \
                    [K_C] [K_V] [K_B] [K_N] [K_M]

c Uppercase consonants
store(consonantUpperChars) U+014A U+0057 U+0052 U+0054 U+0059 U+0050 \
                     U+0044 U+0194 U+0047 U+0048 U+004A U+004B U+004C \
                     U+0043 U+0056 U+0042 U+004E U+004D
store(consonantUpperKeys) [SHIFT K_Q] [SHIFT K_W] [SHIFT K_R] [SHIFT K_T] [SHIFT K_Y] [SHIFT K_P] \
                    [SHIFT K_D] [SHIFT K_F] [SHIFT K_G] [SHIFT K_H] [SHIFT K_J] [SHIFT K_K] [SHIFT K_L] \
                    [SHIFT K_C] [SHIFT K_V] [SHIFT K_B] [SHIFT K_N] [SHIFT K_M]

c Lowercase vowels
store(vowelLowerChars) U+0061 U+0065 U+0069 U+006F U+0075 U+025B U+0254
store(vowelLowerKeys) [K_A]  [K_E] [K_I] [K_O] [K_U] [K_S] [K_X]

c Uppercase vowels
store(vowelUpperChars) U+0041 U+0045 U+0049 U+004F U+0055 U+0190 U+0186
store(vowelUpperKeys) [SHIFT K_A] [SHIFT K_E] [SHIFT K_I] [SHIFT K_O] [SHIFT K_U] [SHIFT K_S] [SHIFT K_X]

store(consonantChars) outs(consonantLowerChars) outs(consonantUpperChars)
store(consonantKeys) outs(consonantLowerKeys) outs(consonantUpperKeys)
store(vowelChars) outs(vowelLowerChars) outs(vowelUpperChars)
store(vowelKeys) outs(vowelLowerKeys) outs(vowelUpperKeys)
store(alphaChars) outs(consonantChars) outs(vowelChars)
store(alphaKeys) outs(consonantKeys) outs(vowelKeys)

c ------------------------------------------------
c Digits: 1234567890
c ------------------------------------------------
store(digitChars) U+0031 U+0032 U+0033 U+0034 U+0035 U+0036 U+0037 U+0038 U+0039 U+0030           c 1234567890
store(digitKeys) [K_1] [K_2] [K_3] [K_4] [K_5] [K_6] [K_7] [K_8] [K_9] [K_0]
store(digitKeysPad) [K_NP1] [K_NP2] [K_NP3] [K_NP4] [K_NP5] [K_NP6] [K_NP7] [K_NP8] [K_NP9] [K_NP0]

c ------------------------------------------------
c Punctuation:
c ------------------------------------------------

store(punctuationChars) U+0021 U+0040 U+0023 U+0024 U+0025 U+005E U+0026 U+002A U+0028 U+0029 U+002D U+005F U+003D U+002B \
                        U+005B U+007B U+005D U+007D U+005C U+007C  \
                        U+002C U+003C U+002E U+003E U+002F U+003F  \
                        U+003B U+003A \
                        U+0027 U+0022

store(punctuationKeys) [SHIFT K_1] [SHIFT K_2] [SHIFT K_3] [SHIFT K_4] [SHIFT K_5] [SHIFT K_6] [SHIFT K_7] [SHIFT K_8] [SHIFT K_9] [SHIFT K_0] [K_HYPHEN] [SHIFT K_HYPHEN] [K_EQUAL] [SHIFT K_EQUAL] \
                       [K_LBRKT] [SHIFT K_LBRKT] [K_RBRKT] [SHIFT K_RBRKT] [K_BKSLASH] [SHIFT K_BKSLASH] \
                       [K_COMMA] [K_Z] [K_PERIOD] [SHIFT K_Z] [K_SLASH] [SHIFT K_SLASH] \
                       [SHIFT K_COMMA] [SHIFT K_PERIOD] \
                       [K_QUOTE] [SHIFT K_QUOTE]

store(coreChars) outs(alphaChars) outs(digitChars) outs(punctuationChars)
store(coreKeys) outs(alphaKeys) outs(digitKeys) outs(punctuationKeys)

c ------------------------------------------------
c ADD additional stores here:
c ------------------------------------------------

store(additionalChars) U+0066 U+0046 U+0071 U+0051 U+0073 U+0053 U+0078 U+0058 U+007A U+005A \
                        U+00A9 U+20AC U+00A3 \
                        U+2013 U+2014 U+2018 U+2019 U+201C U+201D U+2026 \
                        U+0060 U+007E
store(additionalKeys) [RALT K_F] [SHIFT RALT K_F] [RALT K_Q] [SHIFT RALT K_Q] [RALT K_S] [SHIFT RALT K_S] [RALT K_X] [SHIFT RALT K_X] [RALT K_Z] [SHIFT RALT K_Z] \
                        [RALT K_C] [RALT K_E] [RALT K_4] \
                        [RALT K_HYPHEN] [SHIFT RALT K_HYPHEN] [RALT K_COLON] [RALT K_QUOTE] [SHIFT RALT K_COLON] [SHIFT RALT K_QUOTE] [RALT K_PERIOD] \
                        [RALT K_BKQUOTE] [SHIFT RALT K_BKQUOTE]
store(additionalKeysMacOS) [LALT K_F] [SHIFT LALT K_F] [LALT K_Q] [SHIFT LALT K_Q] [LALT K_S] [SHIFT LALT K_S] [LALT K_X] [SHIFT LALT K_X] [LALT K_Z] [SHIFT LALT K_Z] \
                        [LALT K_C] [LALT K_E] [LALT K_4] \
                        [LALT K_HYPHEN] [SHIFT LALT K_HYPHEN] [LALT K_COLON] [LALT K_QUOTE] [SHIFT LALT K_COLON] [SHIFT LALT K_QUOTE] [LALT K_PERIOD] \
                        [LALT K_BKQUOTE] [SHIFT LALT K_BKQUOTE]
store(additionalTouch) [T_F] [SHIFT T_F] [T_Q] [SHIFT T_Q] [T_S] [SHIFT T_S] [T_X] [SHIFT T_X] [T_Z] [SHIFT T_Z] \
                        [T_COPYRIGHT] [T_EURO] [T_POUND] \
                        [T_EN_DASH] [T_EM_DASH] [T_LSINGLE_QUOTE] [T_RSINGLE_QUOTE] [T_LDB_QUOTE] [T_RDB_QUOTE] [T_ELLIPSIS] \
                        [T_BKQUOTE] [T_TILDE]

c Diaeresis - U+0308
store(diaeresisKey)  [K_COLON] [SHIFT K_COLON] [T_DIAERESIS]
store(diaeresisBase) U+0061 U+0041 U+0065 U+0045 U+0069 U+0049 U+006F U+004F                   c a A e E i I o O
store(diaeresisBaseSub) U+0061 U+0041 U+0065 U+0045 U+006F U+004F                              c a A e E o O
store(diaeresisChar) U+00E4 U+00C4 U+00EB U+00CB U+00EF U+00CF U+00F6 U+00D6                   c ä Ä ë Ë ï Ï ö Ö
store(diaeresisCharSub) U+00E4 U+00C4 U+00EB U+00CB U+00F6 U+00D6                              c ä Ä ë Ë ö Ö
store(diaeresisTouch) [T_00E4] [T_00C4] [T_00EB] [T_00CB] [T_00EF] [T_00CF] [T_00F6] [T_00D6]
store(diaeresisLongTouch) [T_00E4_LONG] [T_00C4_LONG] [T_00EB_LONG] [T_00CB_LONG] [T_00EF_LONG] [T_00CF_LONG] [T_00F6_LONG] [T_00D6_LONG]
store(diaeresisExtendedBase) U+025B U+0190 U+0254 U+0186
store(diaeresisAll) outs(diaeresisChar) U+0308
store(nonDiaeresisFinal) U+0069 U+0049 U+0075 U+0055
store(nonDiaeresisFinalSub) U+0075 U+0055
store(notDiaeresis) U+0062 U+0063 U+0064 U+0066 U+0067 U+0068 U+006A U+006B U+006C U+006D U+006E U+0070 U+0071 U+0072 U+0073 U+0074 U+0076 U+0077 U+0078 U+0079 U+007A U+0042 U+0043 U+0044 U+0046 U+0047 U+0048 U+004A U+004B U+004C U+004D U+004E U+0050 U+0051 U+0052 U+0053 U+0054 U+0056 U+0057 U+0058 U+0059 U+005A U+014B U+014A U+0263 U+0194

c High tone:  Acute  > U+0301 ; Circumflex  > U+0302
store(acuteKey) [K_BKQUOTE] [T_ACUTE]
store(circumflexKey) [SHIFT K_BKQUOTE] [T_CIRCUMFLEX]
c a A e E i I o O u U
store(acuteBase) U+0061 U+0041 U+0065 U+0045 U+0069 U+0049 U+006F U+004F
store(acuteBaseSub) U+0061 U+0041 U+0065 U+0045 U+006F U+004F
store(circumflexBase) U+0061 U+0041 U+0065 U+0045 U+0069 U+0049 U+006F U+004F
store(circumflexBaseSub) U+0061 U+0041 U+0065 U+0045 U+006F U+004F
store(circumflexBaseAlt) U+00E4 U+00C4 U+00EB U+00CB U+00EF U+00CF U+00F6 U+00D6

store(acuteChar) U+00E1 U+00C1 U+00E9 U+00C9 U+00ED U+00CD U+00F3 U+00D3
store(acuteCharSub) U+00E1 U+00C1 U+00E9 U+00C9 U+00F3 U+00D3
store(acuteTouch) [T_00E1] [T_00C1] [T_00E9] [T_00C9] [T_00ED] [T_00CD] [T_00F3] [T_00D3]
c [T_00FA] [T_00DA]
store(acuteLongTouch) [T_00E1_LONG] [T_00C1_LONG] [T_00E9_LONG] [T_00C9_LONG] [T_00ED_LONG] [T_00CD_LONG] [T_00F3_LONG] [T_00D3_LONG]
c [T_00FA_LONG] [T_00DA_LONG]

store(circumflexChar) U+00E2 U+00C2 U+00EA U+00CA U+00EE U+00CE U+00F4 U+00D4
store(circumflexCharSub) U+00E2 U+00C2 U+00EA U+00CA U+00F4 U+00D4
store(circumflexTouch) [T_00E2] [T_00C2] [T_00EA] [T_00CA] [T_00EE] [T_00CE] [T_00F4] [T_00D4]
store(circumflexLongTouch) [T_00E2_LONG] [T_00C2_LONG] [T_00EA_LONG] [T_00CA_LONG] [T_00EE_LONG] [T_00CE_LONG] [T_00F4_LONG] [T_00D4_LONG]

store(altKeys) outs(additionalKeys) outs(additionalKeysMacOS) outs(additionalTouch) [T_DIAERESIS] [T_OPEN_E_0308] [SHIFT T_OPEN_E_0308] [T_OPEN_O_0308] [SHIFT T_OPEN_O_0308] outs(diaeresisTouch) outs(diaeresisLongTouch) [T_OPEN_E_0308_LONG] [SHIFT T_OPEN_E_0308_LONG] [T_OPEN_O_0308_LONG] [SHIFT T_OPEN_O_0308_LONG] [K_BKSP] [SHIFT K_BKSP] [LCTRL K_BKSP] [RCTRL K_BKSP] [T_ACUTE] [T_CIRCUMFLEX] outs(acuteTouch) outs(acuteLongTouch) outs(circumflexTouch) outs(circumflexLongTouch) [T_OPEN_E_0301] [SHIFT T_OPEN_E_0301] [T_OPEN_O_0301] [SHIFT T_OPEN_O_0301] [T_OPEN_E_0301_LONG] [SHIFT T_OPEN_E_0301_LONG] [T_OPEN_O_0301_LONG] [SHIFT T_OPEN_O_0301_LONG] [T_OPEN_E_0302] [SHIFT T_OPEN_E_0302] [T_OPEN_O_0302] [SHIFT T_OPEN_O_0302] [T_OPEN_E_0302_LONG] [SHIFT T_OPEN_E_0302_LONG] [T_OPEN_O_0302_LONG] [SHIFT T_OPEN_O_0302_LONG] [SHIFT RALT K_O] [SHIFT RALT K_P] [SHIFT LALT K_O] [SHIFT LALT K_P] [SHIFT LCTRL K_LBRKT] [SHIFT RCTRL K_LBRKT] [SHIFT LCTRL K_RBRKT] [SHIFT RCTRL K_RBRKT] [T_BKQUOTE] [T_TILDE] [LALT K_BKQUOTE] [SHIFT LALT K_BKQUOTE] [RALT K_BKQUOTE] [SHIFT RALT K_BKQUOTE] [RALT K_COLON] [SHIFT RALT K_COLON] [LALT K_COLON] [SHIFT LALT K_COLON] [RALT K_QUOTE] [SHIFT RALT K_QUOTE] [LALT K_QUOTE] [SHIFT LALT K_QUOTE] [T_NFD] [T_NFC] [T_NO_TONES] [T_TONES] [T_00FA] [T_00FA_LONG] [T_00DA] [T_00DA_LONG]


c ================================================
c
c Constraints group
c
c ================================================


group(constraints) using keys
+ [LCTRL K_LBRKT] > set(nfc = 'no') save(nfc)
+ [RCTRL K_LBRKT] > set(nfc = 'no') save(nfc)
+ [T_NFD] > set(nfc = 'no') save(nfc)
+ [LCTRL K_RBRKT] > set(nfc = 'yes') save(nfc)
+ [RCTRL K_RBRKT] > set(nfc = 'yes') save(nfc)
+ [T_NFC] > set(nfc = 'yes') save(nfc)

+ [SHIFT LCTRL K_LBRKT] > set(tones = 'no') save(tones)
+ [SHIFT RCTRL K_LBRKT] > set(tones = 'no') save(tones)
+ [SHIFT LCTRL K_RBRKT] > set(tones = 'yes') save(tones)
+ [SHIFT RCTRL K_RBRKT] > set(tones = 'yes') save(tones)

platform("touch") + [T_NO_TONES] > set(tones = 'no') save(tones) set(&layer = 'default')
platform("touch") + [T_TONES] > set(tones = 'yes') save(tones) set(&layer = 'defaultTones')

if(tones = 'yes') if(&layer = 'default') + [T_SHIFT] > layer('shiftTones')
if(tones = 'no') if(&layer = 'default') + [T_SHIFT] > layer('shift')
if(tones = 'yes') if(&layer = 'shift') + [T_SHIFT] > layer('defaultTones')
if(tones = 'no') if(&layer = 'shift') + [T_SHIFT] > layer('default')

if(tones = 'yes') if(&layer = 'defaultTones') + [T_SHIFT] > layer('shiftTones')
if(tones = 'no') if(&layer = 'defaultTones') + [T_SHIFT] > layer('shift')
if(tones = 'yes') if(&layer = 'shiftTones') + [T_SHIFT] > layer('defaultTones')
if(tones = 'no') if(&layer = 'shiftTones') + [T_SHIFT] > layer('default')

any(diaeresisChar) + any(diaeresisKey)  > context
U+0308 + any(diaeresisKey)  > context
any(acuteChar) + any(acuteKey) > context
U+0301 + any(acuteKey) > context
any(circumflexChar) + any(circumflexKey) > context
U+0302 + any(circumflexKey) > context
any(notDiaeresis) + any(diaeresisKey) > context
any(notDiaeresis) + any(acuteKey) > context
any(notDiaeresis) + any(circumflexKey) > context


if(nfc = 'no') if(tones = 'no') + [LALT K_SLASH] > "nfc=0; tones=0"
if(nfc = 'yes') if(tones = 'no') + [LALT K_SLASH] > "nfc=1; tones=0"
if(nfc = 'no') if(tones = 'yes') + [LALT K_SLASH] > "nfc=0; tones=1"
if(nfc = 'yes') if(tones = 'yes') + [LALT K_SLASH] > "nfc=1; tones=1"
if(nfc = 'no') if(tones = 'no') + [RALT K_SLASH] > "nfc=0; tones=0"
if(nfc = 'yes') if(tones = 'no') + [RALT K_SLASH] > "nfc=1; tones=0"
if(nfc = 'no') if(tones = 'yes') + [RALT K_SLASH] > "nfc=0; tones=1"
if(nfc = 'yes') if(tones = 'yes') + [RALT K_SLASH] > "nfc=1; tones=1"

+ any(diaeresisKey) > U+0308 use(normalise)
if(tones = 'no') + any(acuteKey) > nul
if(tones = 'yes') + any(acuteKey) > U+0301 use(normalise)
if(tones = 'no') + any(circumflexKey) > nul
if(tones = 'yes') + any(circumflexKey) > U+0302 use(normalise)
+ any(digitKeysPad) > use(main)
+ any(altKeys) > use(main)
nomatch > use(main)


c ================================================
c
c Main group
c   Processes rules for:
c     * non-diacritic alphabetic sequences
c     * touch device-specific rules
c     * digits and punctuation
c     * backspace logic
c
c ================================================

group(main) using keys

+ any(coreKeys) > index(coreChars,1)
+ any(digitKeysPad) > index(digitChars,1)

if(&platform != "touch") + any(additionalKeys) > index(additionalChars,2)
platform("macos") + any(additionalKeysMacOS) > index(additionalChars,2)
platform("touch") + any(additionalTouch) > index(additionalChars,2)

c
c rules for breathy vowels - touch devices
c

if(nfc = 'no') platform("touch") + any(diaeresisTouch) > index(diaeresisBase,3) U+0308
if(nfc = 'yes') platform("touch") + any(diaeresisTouch) > index(diaeresisChar,3)
if(nfc = 'no') platform("touch") + any(diaeresisLongTouch) > index(diaeresisBase,3) U+0308 index(diaeresisBase,3) U+0308
if(nfc = 'yes') platform("touch") + any(diaeresisLongTouch) > index(diaeresisChar,3) index(diaeresisChar,3)
platform("touch") + [T_OPEN_E_0308] > U+025B U+0308
platform("touch") + [SHIFT T_OPEN_E_0308] > U+0190 U+0308
platform("touch") + [T_OPEN_O_0308] > U+0254 U+0308
platform("touch") + [SHIFT T_OPEN_O_0308] > U+0186 U+0308
platform("touch") + [T_OPEN_E_0308_LONG] > U+025B U+0308 U+025B U+0308
platform("touch") + [SHIFT T_OPEN_E_0308_LONG] > U+0190 U+0308 U+0190 U+0308
platform("touch") + [T_OPEN_O_0308_LONG] > U+0254 U+0308 U+0254 U+0308
platform("touch") + [SHIFT T_OPEN_O_0308_LONG] > U+0186 U+0308 U+0186 U+0308

c
c rules for vowels with high tone - touch devices
c

if(nfc = 'no') platform("touch") + any(acuteTouch) > index(acuteBase,3) U+0301
if(nfc = 'yes') platform("touch") + any(acuteTouch) > index(acuteChar,3)
if(nfc = 'no') platform("touch") + any(acuteLongTouch) > index(acuteBase,3) U+0301 index(acuteBase,3) U+0301
if(nfc = 'yes') platform("touch") + any(acuteLongTouch) > index(acuteChar,3) index(acuteChar,3)
platform("touch") + [T_OPEN_E_0301] > U+025B U+0301
platform("touch") + [SHIFT T_OPEN_E_0301] > U+0190 U+0301
platform("touch") + [T_OPEN_O_0301] > U+0254 U+0301
platform("touch") + [SHIFT T_OPEN_O_0301] > U+0186 U+0301
platform("touch") + [T_OPEN_E_0301_LONG] > U+025B U+0301 U+025B U+0301
platform("touch") + [SHIFT T_OPEN_E_0301_LONG] > U+0190 U+0301 U+0190 U+0301
platform("touch") + [T_OPEN_O_0301_LONG] > U+0254 U+0301 U+0254 U+0301
platform("touch") + [SHIFT T_OPEN_O_0301_LONG] > U+0186 U+0301 U+0186 U+0301

c
c rules for breathy vowels with high tone - touch devices
c

if(nfc = 'no') platform("touch") + any(circumflexTouch) > index(circumflexBase,3) U+0302
if(nfc = 'yes') platform("touch") + any(circumflexTouch) > index(circumflexChar,3)
if(nfc = 'no') platform("touch") + any(circumflexLongTouch) > index(circumflexBase,3) U+0302 index(circumflexBase,3) U+0302
if(nfc = 'yes') platform("touch") + any(circumflexLongTouch) > index(circumflexChar,3) index(circumflexChar,3)
platform("touch") + [T_OPEN_E_0302] > U+025B U+0302
platform("touch") + [SHIFT T_OPEN_E_0302] > U+0190 U+0302
platform("touch") + [T_OPEN_O_0302] > U+0254 U+0302
platform("touch") + [SHIFT T_OPEN_O_0302] > U+0186 U+0302
platform("touch") + [T_OPEN_E_0302_LONG] > U+025B U+0302 U+025B U+0302
platform("touch") + [SHIFT T_OPEN_E_0302_LONG] > U+0190 U+0302 U+0190 U+0302
platform("touch") + [T_OPEN_O_0302_LONG] > U+0254 U+0302 U+0254 U+0302
platform("touch") + [SHIFT T_OPEN_O_0302_LONG] > U+0186 U+0302 U+0186 U+0302


platform("touch") + [T_00FA] > U+00FA
platform("touch") + [T_00FA_LONG] > U+00FA U+00FA
platform("touch") + [T_00DA] > U+00DA
platform("touch") + [T_00DA_LONG] > U+00DA U+00DA
c
c Backspace key logic for breathy and long breathy vowels
c

any(diaeresisBase) U+0308 + [K_BKSP] > nul
any(diaeresisChar) + [K_BKSP] > nul
any(diaeresisBase) U+0308 any(diaeresisBase) U+0308 + [K_BKSP] > context(1) context(2)
any(diaeresisChar) any(diaeresisChar) + [K_BKSP] > context(1)
any(diaeresisExtendedBase) U+0308 + [K_BKSP] > nul
any(diaeresisExtendedBase) U+0308 any(diaeresisExtendedBase) U+0308 + [K_BKSP] > context(1) context(2)

any(diaeresisBase) U+0308 + [SHIFT K_BKSP] > context(1)
any(diaeresisChar) + [SHIFT K_BKSP] > index(diaeresisBase,1)
any(diaeresisExtendedBase) U+0308 + [SHIFT K_BKSP] > context(1)
any(diaeresisBase) U+0308 any(diaeresisBase) U+0308 + [SHIFT K_BKSP] > context(1) context(2)
any(diaeresisChar) any(diaeresisChar) + [SHIFT K_BKSP] > index(diaeresisBase,1) index(diaeresisBase,2)
any(diaeresisExtendedBase) U+0308 any(diaeresisExtendedBase) U+0308 + [SHIFT K_BKSP] > context(1) context(3)

any(diaeresisBase) U+0308 + [LCTRL K_BKSP] > nul
any(diaeresisChar) + [LCTRL K_BKSP] > nul
any(diaeresisExtendedBase) U+0308 + [LCTRL K_BKSP] > nul
any(diaeresisBase) U+0308 any(diaeresisBase) U+0308 + [LCTRL K_BKSP] > nul
any(diaeresisChar) any(diaeresisChar) + [LCTRL K_BKSP] > nul
any(diaeresisExtendedBase) U+0308 any(diaeresisExtendedBase) U+0308 + [LCTRL K_BKSP] > nul

any(diaeresisBase) U+0308 + [RCTRL K_BKSP] > nul
any(diaeresisChar) + [RCTRL K_BKSP] > nul
any(diaeresisExtendedBase) U+0308 + [RCTRL K_BKSP] > nul
any(diaeresisBase) U+0308 any(diaeresisBase) U+0308 + [RCTRL K_BKSP] > nul
any(diaeresisChar) any(diaeresisChar) + [RCTRL K_BKSP] > nul
any(diaeresisExtendedBase) U+0308 any(diaeresisExtendedBase) U+0308 + [RCTRL K_BKSP] > nul

c
c Backspace key logic for vowels with high tone
c

c
c Backspace key logic for breathy vowels with high tone
c

c
c Internal rules: undocumented (desktop only)
c

+ [RALT K_O] > U+25CC U+0308                            c diaeresis
platform("macos") + [LALT K_O] > U+25CC U+0308          c diaeresis

+ [RALT K_P] > U+25CC U+0301                      c acute (high tone)
platform("macos") + [LALT K_P] > U+25CC U+0301    c acute (High tone)

+ [SHIFT RALT K_O] > U+25CC U+0302                            c circumflex (high tone - breathy vowels)
platform("macos") + [SHIFT LALT K_O] > U+25CC U+0302          c circumflex (high tone - breathy vowels)

+ [SHIFT RALT K_P] > U+25CC U+0308 U+0301                      c circumflex, acute
platform("macos") + [SHIFT LALT K_P] > U+25CC U+0308 U+0301    c circumflex, acute

c ================================================
c
c Normalise group
c   Directs diacritic key sequence rules to NFC or NFD
c   processing groups.
c
c ================================================

group(normalise)
if(nfc = 'yes') > use(nfc_processing)
if(nfc = 'no') > use(nfd_processing)

c ================================================
c
c NFC processing group
c   nfc = 'yes'; use Unicode Normalisation Form C
c   (precomposed characters)
c
c ================================================

group(nfc_processing)

c ------------------------------------------------
c Breathy vowels:
c ------------------------------------------------

c
c Long breathy vowel input shortcuts
c

U+0061 U+0061 U+0308 > U+00E4 U+00E4
U+0041 U+0041 U+0308 > U+00C4 U+00C4
U+0065 U+0065 U+0308 > U+00EB U+00EB
U+0045 U+0045 U+0308 > U+00CB U+00CB
U+0069 U+0069 U+0308 > U+00EF U+00EF
U+0049 U+0049 U+0308 > U+00CF U+00CF
U+006F U+006F U+0308 > U+00F6 U+00F6
U+004F U+004F U+0308 > U+00D6 U+00D6
U+025B U+025B U+0308 > U+025B U+0308 U+025B U+0308
U+0190 U+0190 U+0308 > U+0190 U+0308 U+0190 U+0308
U+0254 U+0254 U+0308 > U+0254 U+0308 U+0254 U+0308
U+0186 U+0186 U+0308 > U+0186 U+0308 U+0186 U+0308

c
c allows a diacritic to be typed at the end of a diphthong
c

U+0061 U+0061 any(nonDiaeresisFinal) U+0308 > U+00E4 U+00E4 context(3)
U+0041 U+0041 any(nonDiaeresisFinal) U+0308 > U+00C4 U+00C4 context(3)
U+0065 U+0065 any(nonDiaeresisFinal) U+0308 > U+00EB U+00EB context(3)
U+0045 U+0045 any(nonDiaeresisFinal) U+0308 > U+00CB U+00CB context(3)
U+0069 U+0069 any(nonDiaeresisFinalSub) U+0308 > U+00EF U+00EF context(3)
U+0049 U+0049 any(nonDiaeresisFinalSub) U+0308 > U+00CF U+00CF context(3)
U+006F U+006F any(nonDiaeresisFinal) U+0308 > U+00F6 U+00F6 context(3)
U+004F U+004F any(nonDiaeresisFinal) U+0308 > U+00D6 U+00D6 context(3)
U+025B U+025B any(nonDiaeresisFinal) U+0308 > U+025B U+0308 U+025B U+0308 context(3)
U+0190 U+0190 any(nonDiaeresisFinal) U+0308 > U+0190 U+0308 U+0190 U+0308 context(3)
U+0254 U+0254 any(nonDiaeresisFinal) U+0308 > U+0254 U+0308 U+0254 U+0308 context(3)
U+0186 U+0186 any(nonDiaeresisFinal) U+0308 > U+0186 U+0308 U+0186 U+0308 context(3)

any(diaeresisBaseSub) any(nonDiaeresisFinal) U+0308 > index(diaeresisChar,1) context(2)
U+0069 any(nonDiaeresisFinalSub) U+0308 > U+00EF context(2)
U+0049 any(nonDiaeresisFinalSub) U+0308 > U+00CF context(2)

any(diaeresisExtendedBase) any(nonDiaeresisFinal) U+0308 > context(1) U+0308 context(2)

c
c rules for breathy vowels
c

any(diaeresisBase) U+0308 >  index(diaeresisChar,1)
any(diaeresisExtendedBase) U+0308 > context

c
c uU constraints
c
U+0075 U+0308 > context(1)
U+0055 U+0308 > context(1)

c ------------------------------------------------
c Vowels with high tone:
c ------------------------------------------------

c
c Long breathy vowel input shortcuts
c

U+0061 U+0061 U+0301 > U+00E1 U+00E1
U+0041 U+0041 U+0301 > U+00C1 U+00C1
U+0065 U+0065 U+0301 > U+00E9 U+00E9
U+0045 U+0045 U+0301 > U+00C9 U+00C9
U+0069 U+0069 U+0301 > U+00ED U+00ED
U+0049 U+0049 U+0301 > U+00CD U+00CD
U+006F U+006F U+0301 > U+00F3 U+00F3
U+004F U+004F U+0301 > U+00D3 U+00D3
U+025B U+025B U+0301 > U+025B U+0301 U+025B U+0301
U+0190 U+0190 U+0301 > U+0190 U+0301 U+0190 U+0301
U+0254 U+0254 U+0301 > U+0254 U+0301 U+0254 U+0301
U+0186 U+0186 U+0301 > U+0186 U+0301 U+0186 U+0301

c
c allows a diacritic to be typed at the end of a diphthong
c

U+0061 U+0061 any(nonDiaeresisFinal) U+0301 > U+00E1 U+00E1 context(3)
U+0041 U+0041 any(nonDiaeresisFinal) U+0301 > U+00C1 U+00C1 context(3)
U+0065 U+0065 any(nonDiaeresisFinal) U+0301 > U+00E9 U+00E9 context(3)
U+0045 U+0045 any(nonDiaeresisFinal) U+0301 > U+00C9 U+00C9 context(3)
U+0069 U+0069 any(nonDiaeresisFinalSub) U+0301 > U+00ED U+00ED context(3)
U+0049 U+0049 any(nonDiaeresisFinalSub) U+0301 > U+00CD U+00CD context(3)
U+006F U+006F any(nonDiaeresisFinal) U+0301 > U+00F3 U+00F3 context(3)
U+004F U+004F any(nonDiaeresisFinal) U+0301 > U+00D3 U+00D3 context(3)
U+025B U+025B any(nonDiaeresisFinal) U+0301 > U+025B U+0301 U+025B U+0301 context(3)
U+0190 U+0190 any(nonDiaeresisFinal) U+0301 > U+0190 U+0301 U+0190 U+0301 context(3)
U+0254 U+0254 any(nonDiaeresisFinal) U+0301 > U+0254 U+0301 U+0254 U+0301 context(3)
U+0186 U+0186 any(nonDiaeresisFinal) U+0301 > U+0186 U+0301 U+0186 U+0301 context(3)

any(acuteBaseSub) any(nonDiaeresisFinal) U+0301 > index(acuteCharSub,1) context(2)

U+0069 any(nonDiaeresisFinalSub) U+0301 > U+00ED context(2)
U+0049 any(nonDiaeresisFinalSub) U+0301 > U+00CD context(2)

any(diaeresisExtendedBase) any(nonDiaeresisFinal) U+0301 > context(1) U+0301 context(2)

c
c rules for breathy vowels
c

any(acuteBase) U+0301 >  index(acuteChar,1)
any(diaeresisExtendedBase) U+0301 > context

c
c uU constraints
c
U+0075 U+0075 U+0301 > U+00FA U+00FA
U+0075 U+0301 > U+00FA
U+0055 U+0055 U+0301 > U+00DA U+00DA
U+0055 U+0301 > U+00DA

c ------------------------------------------------
c Breathy vowels with high tone:
c ------------------------------------------------

c
c Long breathy vowel input shortcuts
c

U+0061 U+0061 U+0302 > U+00E2 U+00E2
U+0041 U+0041 U+0302 > U+00C2 U+00C2
U+0065 U+0065 U+0302 > U+00EA U+00EA
U+0045 U+0045 U+0302 > U+00CA U+00CA
U+0069 U+0069 U+0302 > U+00EE U+00EE
U+0049 U+0049 U+0302 > U+00CE U+00CE
U+006F U+006F U+0302 > U+00F4 U+00F4
U+004F U+004F U+0302 > U+00D4 U+00D4
U+025B U+025B U+0302 > U+025B U+0302 U+025B U+0302
U+0190 U+0190 U+0302 > U+0190 U+0302 U+0190 U+0302
U+0254 U+0254 U+0302 > U+0254 U+0302 U+0254 U+0302
U+0186 U+0186 U+0302 > U+0186 U+0302 U+0186 U+0302

U+00E4 U+00E4 U+0301 > U+00E2 U+00E2
U+00C4 U+00C4 U+0301 > U+00C2 U+00C2
U+00EB U+00EB U+0301 > U+00EA U+00EA
U+00CB U+00CB U+0301 > U+00CA U+00CA
U+00EF U+00EF U+0301 > U+00EE U+00EE
U+00CF U+00CF U+0301 > U+00CE U+00CE
U+00F6 U+00F6 U+0301 > U+00F4 U+00F4
U+00D6 U+00D6 U+0301 > U+00D4 U+00D4
U+025B U+0308 U+025B U+0308 U+0301 > U+025B U+0302 U+025B U+0302
U+0190 U+0308 U+0190 U+0308 U+0301 > U+0190 U+0302 U+0190 U+0302
U+0254 U+0308 U+0254 U+0308 U+0301 > U+0254 U+0302 U+0254 U+0302
U+0186 U+0308 U+0186 U+0308 U+0301 > U+0186 U+0302 U+0186 U+0302

c
c allows a diacritic to be typed at the end of the diphthong
c

U+0061 U+0061 any(nonDiaeresisFinal) U+0302 > U+00E2 U+00E2 context(3)
U+0041 U+0041 any(nonDiaeresisFinal) U+0302 > U+00C2 U+00C2 context(3)
U+0065 U+0065 any(nonDiaeresisFinal) U+0302 > U+00EA U+00EA context(3)
U+0045 U+0045 any(nonDiaeresisFinal) U+0302 > U+00CA U+00CA context(3)
U+0069 U+0069 any(nonDiaeresisFinalSub) U+0302 > U+00EE U+00EE context(3)
U+0049 U+0049 any(nonDiaeresisFinalSub) U+0302 > U+00CE U+00CE context(3)
U+006F U+006F any(nonDiaeresisFinal) U+0302 > U+00F4 U+00F4 context(3)
U+004F U+004F any(nonDiaeresisFinal) U+0302 > U+00D4 U+00D4 context(3)
U+025B U+025B any(nonDiaeresisFinal) U+0302 > U+025B U+0302 U+025B U+0302 context(3)
U+0190 U+0190 any(nonDiaeresisFinal) U+0302 > U+0190 U+0302 U+0190 U+0302 context(3)
U+0254 U+0254 any(nonDiaeresisFinal) U+0302 > U+0254 U+0302 U+0254 U+0302 context(3)
U+0186 U+0186 any(nonDiaeresisFinal) U+0302 > U+0186 U+0302 U+0186 U+0302 context(3)

U+00E4 U+00E4 any(nonDiaeresisFinal) U+0301 > U+00E2 U+00E2 context(3)
U+00C4 U+00C4 any(nonDiaeresisFinal) U+0301 > U+00C2 U+00C2 context(3)
U+00EB U+00EB any(nonDiaeresisFinal) U+0301 > U+00EA U+00EA context(3)
U+00CB U+00CB any(nonDiaeresisFinal) U+0301 > U+00CA U+00CA context(3)
U+00EF U+00EF any(nonDiaeresisFinal) U+0301 > U+00EE U+00EE context(3)
U+00CF U+00CF any(nonDiaeresisFinal) U+0301 > U+00CE U+00CE context(3)
U+00F6 U+00F6 any(nonDiaeresisFinal) U+0301 > U+00F4 U+00F4 context(3)
U+00D6 U+00D6 any(nonDiaeresisFinal) U+0301 > U+00D4 U+00D4 context(3)
U+025B U+0308 U+025B U+0308 any(nonDiaeresisFinal) U+0301 > U+025B U+0302 U+025B U+0302 context(5)
U+0190 U+0308 U+0190 U+0308 any(nonDiaeresisFinal) U+0301 > U+0190 U+0302 U+0190 U+0302 context(5)
U+0254 U+0308 U+0254 U+0308 any(nonDiaeresisFinal) U+0301 > U+0254 U+0302 U+0254 U+0302 context(5)
U+0186 U+0308 U+0186 U+0308 any(nonDiaeresisFinal) U+0301 > U+0186 U+0302 U+0186 U+0302 context(5)

any(circumflexBaseSub) any(nonDiaeresisFinal) U+0302 > index(circumflexCharSub,1) context(2)
any(diaeresisBaseSub) any(nonDiaeresisFinal) U+0301 > index(circumflexCharSub,1) context(2)

U+00EF any(nonDiaeresisFinalSub) U+0301 > U+00EE context(2)
U+00CF any(nonDiaeresisFinalSub) U+0301 > U+00CE context(2)

any(diaeresisExtendedBase) any(nonDiaeresisFinal) U+0302 > context(1) U+0302 context(2)
any(diaeresisExtendedBase) U+0308 any(nonDiaeresisFinal) U+0301 > context(1) U+0302 context(2)

c
c rules for breathy vowels
c

any(circumflexBase) U+0302 > index(circumflexChar,1)
any(diaeresisBase) U+0301 > index(circumflexChar,1)
any(diaeresisExtendedBase) U+0302 > context
any(diaeresisExtendedBase) U+0308 U+0301 > context(1) U+0302

c
c uU constraints
c
U+0075 U+0075 U+0302 > U+00FA U+00FA
U+0075 U+0302 > U+00FA
U+0055 U+0055 U+0302 > U+00DA U+00DA
U+0055 U+0302 > U+00DA


c ================================================
c
c NFD processing group
c   nfc = 'no'; use Unicode Normalisation Form D
c   (combining character sequences)
c
c ================================================

group(nfd_processing)


c ------------------------------------------------
c Breathy vowels:
c ------------------------------------------------

U+0061 U+0061 U+0308 > U+0061 U+0308 U+0061 U+0308
U+0041 U+0041 U+0308 > U+0041 U+0308 U+0041 U+0308
U+0065 U+0065 U+0308 > U+0065 U+0308 U+0065 U+0308
U+0045 U+0045 U+0308 > U+0045 U+0308 U+0045 U+0308
U+0069 U+0069 U+0308 > U+0069 U+0308 U+0069 U+0308
U+0049 U+0049 U+0308 > U+0049 U+0308 U+0049 U+0308
U+006F U+006F U+0308 > U+006F U+0308 U+006F U+0308
U+004F U+004F U+0308 > U+004F U+0308 U+004F U+0308
U+025B U+025B U+0308 > U+025B U+0308 U+025B U+0308
U+0190 U+0190 U+0308 > U+0190 U+0308 U+0190 U+0308
U+0254 U+0254 U+0308 > U+0254 U+0308 U+0254 U+0308
U+0186 U+0186 U+0308 > U+0186 U+0308 U+0186 U+0308

c
c Allows a diacritic to be typed at the end of a diphthong
c

U+0061 U+0061 any(nonDiaeresisFinal) U+0308 > U+0061 U+0308 U+0061 U+0308 context(3)
U+0041 U+0041 any(nonDiaeresisFinal) U+0308 > U+0041 U+0308 U+0041 U+0308 context(3)
U+0065 U+0065 any(nonDiaeresisFinal) U+0308 > U+0065 U+0308 U+0065 U+0308 context(3)
U+0045 U+0045 any(nonDiaeresisFinal) U+0308 > U+0045 U+0308 U+0045 U+0308 context(3)
U+0069 U+0069 any(nonDiaeresisFinalSub) U+0308 > U+0069 U+0308 U+0069 U+0308 context(3)
U+0049 U+0049 any(nonDiaeresisFinalSub) U+0308 > U+0049 U+0308 U+0049 U+0308 context(3)
U+006F U+006F any(nonDiaeresisFinal) U+0308 > U+006F U+0308 U+006F U+0308 context(3)
U+004F U+004F any(nonDiaeresisFinal) U+0308 > U+004F U+0308 U+004F U+0308 context(3)
U+025B U+025B any(nonDiaeresisFinal) U+0308 > U+025B U+0308 U+025B U+0308 context(3)
U+0190 U+0190 any(nonDiaeresisFinal) U+0308 > U+0190 U+0308 U+0190 U+0308 context(3)
U+0254 U+0254 any(nonDiaeresisFinal) U+0308 > U+0254 U+0308 U+0254 U+0308 context(3)
U+0186 U+0186 any(nonDiaeresisFinal) U+0308 > U+0186 U+0308 U+0186 U+0308 context(3)

any(diaeresisBaseSub) any(nonDiaeresisFinal) U+0308 > context(1) U+0308 context(2)
U+0069 any(nonDiaeresisFinalSub) U+0308 > context(1) U+0308 context(2)
U+0049 any(nonDiaeresisFinalSub) U+0308 > context(1) U+0308 context(2)

any(diaeresisExtendedBase) any(nonDiaeresisFinal) U+0308 > context(1) U+0308 context(2)

c
c rules for breathy vowels
c

any(diaeresisBase) U+0308 > context
any(diaeresisExtendedBase) U+0308 > context

c
c uU constraints
c
U+0075 U+0308 > context(1)
U+0055 U+0308 > context(1)

c ------------------------------------------------
c Vowels with high tone:
c ------------------------------------------------

U+0061 U+0061 U+0301 > U+0061 U+0301 U+0061 U+0301
U+0041 U+0041 U+0301 > U+0041 U+0301 U+0041 U+0301
U+0065 U+0065 U+0301 > U+0065 U+0301 U+0065 U+0301
U+0045 U+0045 U+0301 > U+0045 U+0301 U+0045 U+0301
U+0069 U+0069 U+0301 > U+0069 U+0301 U+0069 U+0301
U+0049 U+0049 U+0301 > U+0049 U+0301 U+0049 U+0301
U+006F U+006F U+0301 > U+006F U+0301 U+006F U+0301
U+004F U+004F U+0301 > U+004F U+0301 U+004F U+0301
U+025B U+025B U+0301 > U+025B U+0301 U+025B U+0301
U+0190 U+0190 U+0301 > U+0190 U+0301 U+0190 U+0301
U+0254 U+0254 U+0301 > U+0254 U+0301 U+0254 U+0301
U+0186 U+0186 U+0301 > U+0186 U+0301 U+0186 U+0301

c
c allows a diacritic to be typed at the end of a diphthong
c

U+0061 U+0061 any(nonDiaeresisFinal) U+0301 > U+0061 U+0301 U+0061 U+0301 context(3)
U+0041 U+0041 any(nonDiaeresisFinal) U+0301 > U+0041 U+0301 U+0041 U+0301 context(3)
U+0065 U+0065 any(nonDiaeresisFinal) U+0301 > U+0065 U+0301 U+0065 U+0301 context(3)
U+0045 U+0045 any(nonDiaeresisFinal) U+0301 > U+0045 U+0301 U+0045 U+0301 context(3)
U+0069 U+0069 any(nonDiaeresisFinalSub) U+0301 > U+0069 U+0301 U+0069 U+0301 context(3)
U+0049 U+0049 any(nonDiaeresisFinalSub) U+0301 > U+0049 U+0301 U+0049 U+0301 context(3)
U+006F U+006F any(nonDiaeresisFinal) U+0301 > U+006F U+0301 U+006F U+0301 context(3)
U+004F U+004F any(nonDiaeresisFinal) U+0301 > U+004F U+0301 U+004F U+0301 context(3)
U+025B U+025B any(nonDiaeresisFinal) U+0301 > U+025B U+0301 U+025B U+0301 context(3)
U+0190 U+0190 any(nonDiaeresisFinal) U+0301 > U+0190 U+0301 U+0190 U+0301 context(3)
U+0254 U+0254 any(nonDiaeresisFinal) U+0301 > U+0254 U+0301 U+0254 U+0301 context(3)
U+0186 U+0186 any(nonDiaeresisFinal) U+0301 > U+0186 U+0301 U+0186 U+0301 context(3)

any(diaeresisBaseSub) any(nonDiaeresisFinal) U+0301 > context(1) U+0301 context(2)
U+0069 any(nonDiaeresisFinalSub) U+0301 > context(1) U+0301 context(2)
U+0049 any(nonDiaeresisFinalSub) U+0301 > context(1) U+0301 context(2)

any(diaeresisExtendedBase) any(nonDiaeresisFinal) U+0301 > context(1) U+0301 context(2)

c
c rules for breathy vowels
c

any(diaeresisBase) U+0301 > context
any(diaeresisExtendedBase) U+0301 > context

c
c uU constraints
c
U+0075 U+0301 > context
U+0055 U+0301 > context

c ------------------------------------------------
c Breathy vowels with high tone:
c ------------------------------------------------

U+0061 U+0061 U+0302 > U+0061 U+0302 U+0061 U+0302
U+0041 U+0041 U+0302 > U+0041 U+0302 U+0041 U+0302
U+0065 U+0065 U+0302 > U+0065 U+0302 U+0065 U+0302
U+0045 U+0045 U+0302 > U+0045 U+0302 U+0045 U+0302
U+0069 U+0069 U+0302 > U+0069 U+0302 U+0069 U+0302
U+0049 U+0049 U+0302 > U+0049 U+0302 U+0049 U+0302
U+006F U+006F U+0302 > U+006F U+0302 U+006F U+0302
U+004F U+004F U+0302 > U+004F U+0302 U+004F U+0302
U+025B U+025B U+0302 > U+025B U+0302 U+025B U+0302
U+0190 U+0190 U+0302 > U+0190 U+0302 U+0190 U+0302
U+0254 U+0254 U+0302 > U+0254 U+0302 U+0254 U+0302
U+0186 U+0186 U+0302 > U+0186 U+0302 U+0186 U+0302

U+0061 U+0308 U+0061 U+0308 U+0301 > U+0061 U+0302 U+0061 U+0302
U+0041 U+0308 U+0041 U+0308 U+0301 > U+0041 U+0302 U+0041 U+0302
U+0065 U+0308 U+0065 U+0308 U+0301 > U+0065 U+0302 U+0065 U+0302
U+0045 U+0308 U+0045 U+0308 U+0301 > U+0045 U+0302 U+0045 U+0302
U+0069 U+0308 U+0069 U+0308 U+0301 > U+0069 U+0302 U+0069 U+0302
U+0049 U+0308 U+0049 U+0308 U+0301 > U+0049 U+0302 U+0049 U+0302
U+006F U+0308 U+006F U+0308 U+0301 > U+006F U+0302 U+006F U+0302
U+004F U+0308 U+004F U+0308 U+0301 > U+004F U+0302 U+004F U+0302
U+025B U+0308 U+025B U+0308 U+0301 > U+025B U+0302 U+025B U+0302
U+0190 U+0308 U+0190 U+0308 U+0301 > U+0190 U+0302 U+0190 U+0302
U+0254 U+0308 U+0254 U+0308 U+0301 > U+0254 U+0302 U+0254 U+0302
U+0186 U+0308 U+0186 U+0308 U+0301 > U+0186 U+0302 U+0186 U+0302

c
c allows a diacritic to be typed at the end of a diphthong
c

U+0061 U+0061 any(nonDiaeresisFinal) U+0302 > U+0061 U+0302 U+0061 U+0302 context(3)
U+0041 U+0041 any(nonDiaeresisFinal) U+0302 > U+0041 U+0302 U+0041 U+0302 context(3)
U+0065 U+0065 any(nonDiaeresisFinal) U+0302 > U+0065 U+0302 U+0065 U+0302 context(3)
U+0045 U+0045 any(nonDiaeresisFinal) U+0302 > U+0045 U+0302 U+0045 U+0302 context(3)
U+0069 U+0069 any(nonDiaeresisFinalSub) U+0302 > U+0069 U+0302 U+0069 U+0302 context(3)
U+0049 U+0049 any(nonDiaeresisFinalSub) U+0302 > U+0049 U+0302 U+0049 U+0302 context(3)
U+006F U+006F any(nonDiaeresisFinal) U+0302 > U+006F U+0302 U+006F U+0302 context(3)
U+004F U+004F any(nonDiaeresisFinal) U+0302 > U+004F U+0302 U+004F U+0302 context(3)
U+025B U+025B any(nonDiaeresisFinal) U+0302 > U+025B U+0302 U+025B U+0302 context(3)
U+0190 U+0190 any(nonDiaeresisFinal) U+0302 > U+0190 U+0302 U+0190 U+0302 context(3)
U+0254 U+0254 any(nonDiaeresisFinal) U+0302 > U+0254 U+0302 U+0254 U+0302 context(3)
U+0186 U+0186 any(nonDiaeresisFinal) U+0302 > U+0186 U+0302 U+0186 U+0302 context(3)

U+0061 U+0308 U+0061 U+0308 any(nonDiaeresisFinal) U+0301 > U+0061 U+0302 U+0061 U+0302 context(5)
U+0041 U+0308 U+0041 U+0308 any(nonDiaeresisFinal) U+0301 > U+0041 U+0302 U+0041 U+0302 context(5)
U+0065 U+0308 U+0065 U+0308 any(nonDiaeresisFinal) U+0301 > U+0065 U+0302 U+0065 U+0302 context(5)
U+0045 U+0308 U+0045 U+0308 any(nonDiaeresisFinal) U+0301 > U+0045 U+0302 U+0045 U+0302 context(5)
U+0069 U+0308 U+0069 U+0308 any(nonDiaeresisFinalSub) U+0301 > U+0069 U+0302 U+0069 U+0302 context(5)
U+0049 U+0308 U+0049 U+0308 any(nonDiaeresisFinalSub) U+0301 > U+0049 U+0302 U+0049 U+0302 context(5)
U+006F U+0308 U+006F U+0308 any(nonDiaeresisFinal) U+0301 > U+006F U+0302 U+006F U+0302 context(5)
U+004F U+0308 U+004F U+0308 any(nonDiaeresisFinal) U+0301 > U+004F U+0302 U+004F U+0302 context(5)
U+025B U+0308 U+025B U+0308 any(nonDiaeresisFinal) U+0301 > U+025B U+0302 U+025B U+0302 context(5)
U+0190 U+0308 U+0190 U+0308 any(nonDiaeresisFinal) U+0301 > U+0190 U+0302 U+0190 U+0302 context(5)
U+0254 U+0308 U+0254 U+0308 any(nonDiaeresisFinal) U+0301 > U+0254 U+0302 U+0254 U+0302 context(5)
U+0186 U+0308 U+0186 U+0308 any(nonDiaeresisFinal) U+0301 > U+0186 U+0302 U+0186 U+0302 context(5)

any(diaeresisBaseSub) any(nonDiaeresisFinal) U+0302 > context(1) U+0302 context(2)
any(diaeresisBaseSub) U+0308 any(nonDiaeresisFinal) U+0301 > context(1) U+0302 context(3)
U+0069 any(nonDiaeresisFinalSub) U+0302 > context(1) U+0302 context(2)
U+0069 U+0308 any(nonDiaeresisFinalSub) U+0301 > context(1) U+0302 context(3)
U+0049 any(nonDiaeresisFinalSub) U+0302 > context(1) U+0302 context(2)
U+0049 U+0308 any(nonDiaeresisFinalSub) U+0301 > context(1) U+0302 context(3)

any(diaeresisExtendedBase) any(nonDiaeresisFinal) U+0302 > context(1) U+0302 context(2)
any(diaeresisExtendedBase) U+0308 any(nonDiaeresisFinal) U+0301 > context(1) U+0302 context(3)

c
c rules for breathy vowels
c

any(diaeresisBase) U+0302 > context
any(diaeresisBase) U+0308 U+0301 > context(1) U+0302
any(diaeresisExtendedBase) U+0302 > context
any(diaeresisExtendedBase) U+0308 U+0301 > context(1) U+0302

c
c uU constraints
c

U+0075 U+0075 U+0302 > U+0075 U+0301 U+0075 U+0301
U+0075 U+0302 > U+0075 U+0301
U+0055 U+0055 U+0302 > U+0055 U+0301 U+0055 U+0301
U+0055 U+0302 > U+0055 U+0301

c TODO:
c    * add NFC processing rules for high tones
c    * Add backspace logic and touch layout logging the main group for high tones
